#!/bin/bash

# Jarvis AI Assistant - Script de d√©marrage
# Version fonctionnelle corrig√©e

echo "üöÄ D√©marrage de Jarvis AI Assistant..."
echo "========================================"

# Couleurs pour l'affichage
GREEN='\033[0;32m'
YELLOW='\033[1;33m' 
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rification de l'environnement Python
check_python() {
    if command -v python3 &> /dev/null; then
        log_info "Python3 trouv√©"
        PYTHON_CMD="python3"
    elif command -v python &> /dev/null; then
        log_info "Python trouv√©"
        PYTHON_CMD="python"
    else
        log_error "Python non trouv√©. Veuillez installer Python 3.9+"
        exit 1
    fi
}

# V√©rification de l'environnement virtuel
check_venv() {
    if [ -d "venv_gideon_production" ]; then
        log_info "Environnement virtuel trouv√©: venv_gideon_production"
        VENV_PATH="venv_gideon_production"
    elif [ -d "venv_jarvis_local" ]; then
        log_info "Environnement virtuel trouv√©: venv_jarvis_local"
        VENV_PATH="venv_jarvis_local"
    else
        log_warning "Aucun environnement virtuel trouv√©"
        log_warning "Tentative d'ex√©cution avec Python syst√®me..."
        VENV_PATH=""
    fi
}

# Activation de l'environnement virtuel
activate_venv() {
    if [ -n "$VENV_PATH" ]; then
        log_info "Activation de l'environnement virtuel..."
        source "$VENV_PATH/bin/activate"
        
        if [ $? -eq 0 ]; then
            log_info "Environnement virtuel activ√©"
        else
            log_error "√âchec d'activation de l'environnement virtuel"
            exit 1
        fi
    fi
}

# Test de fonctionnement de Jarvis
test_jarvis() {
    log_info "Test de Jarvis..."
    
    if [ -f "test_main.py" ]; then
        $PYTHON_CMD test_main.py > /dev/null 2>&1
        
        if [ $? -eq 0 ]; then
            log_info "Jarvis test√© avec succ√®s"
            return 0
        else
            log_warning "Tests partiels - Jarvis fonctionne avec limitations"
            return 1
        fi
    else
        log_warning "Fichier de test non trouv√©, d√©marrage direct"
        return 1
    fi
}

# D√©marrage de Jarvis
start_jarvis() {
    echo ""
    echo "ü§ñ Quelle interface souhaitez-vous utiliser ?"
    echo "1. Interface graphique (GUI) - Recommand√©"
    echo "2. Interface en ligne de commande (CLI)"
    echo "3. Test rapide uniquement"
    echo ""
    
    read -p "Votre choix (1/2/3): " choice
    
    case $choice in
        1)
            log_info "D√©marrage en mode GUI..."
            $PYTHON_CMD main.py
            ;;
        2)
            log_info "D√©marrage en mode CLI..."
            $PYTHON_CMD main.py --cli
            ;;
        3)
            log_info "Ex√©cution du test rapide..."
            if [ -f "test_main.py" ]; then
                $PYTHON_CMD test_main.py
            else
                log_error "Fichier de test non trouv√©"
            fi
            ;;
        *)
            log_warning "Choix invalide, d√©marrage en mode GUI par d√©faut..."
            $PYTHON_CMD main.py
            ;;
    esac
}

# Gestion des erreurs
handle_error() {
    echo ""
    log_error "Erreur lors du d√©marrage de Jarvis"
    echo ""
    echo "üîß Solutions possibles :"
    echo "1. V√©rifiez que vous √™tes dans le bon r√©pertoire"
    echo "2. Assurez-vous que Python 3.9+ est install√©"
    echo "3. V√©rifiez l'environnement virtuel"
    echo "4. Ex√©cutez: pip install -r requirements.txt"
    echo ""
    echo "Pour plus d'aide, consultez README.md"
    exit 1
}

# Script principal
main() {
    # V√©rifications pr√©liminaires
    check_python
    check_venv
    
    # Activation de l'environnement
    activate_venv
    
    # Test optionnel
    if test_jarvis; then
        log_info "Syst√®me valid√©, d√©marrage de Jarvis..."
    else
        log_warning "Validation partielle, tentative de d√©marrage..."
    fi
    
    # D√©marrage
    start_jarvis
}

# Gestion du signal d'interruption (Ctrl+C)
trap 'echo ""; log_warning "Arr√™t demand√© par l'utilisateur"; exit 0' INT

# Gestion des erreurs
trap 'handle_error' ERR

# Ex√©cution du script principal
main "$@" 