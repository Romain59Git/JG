# ================================================================
# GIDEON AI ASSISTANT - PRODUCTION REQUIREMENTS
# Versions testées et verrouillées pour compatibilité maximale
# Date: 2024 - Résolution complète des 10 problèmes critiques
# ================================================================

# =====================================
# CORE DEPENDENCIES - CRITICAL
# =====================================

# OpenAI API - NOUVELLE VERSION (résout Problème #1)
openai>=1.0.0,<2.0.0

# Interface graphique - STABLE (évite bugs 6.7+)
PyQt6>=6.4.0,<6.7.0

# Computing base
numpy>=1.21.0,<1.26.0          # Compatible avec tout
requests>=2.28.0,<3.0.0        # HTTP requests stable
psutil>=5.9.0,<6.0.0           # System monitoring

# =====================================
# AUDIO STACK - STABLE (résout Problème #2)
# =====================================

# Remplacement pyaudio - PLUS STABLE
sounddevice>=0.4.6,<0.5.0      # Audio I/O multiplateforme
soundfile>=0.12.1,<0.13.0      # Audio file handling
scipy>=1.9.0,<1.12.0           # Signal processing

# Text-to-Speech - COMPATIBLE
pyttsx3>=2.90,<3.0.0           # TTS multiplateforme
SpeechRecognition>=3.10.0,<4.0.0  # Voice recognition

# =====================================
# COMPUTER VISION - LIGHTWEIGHT (résout Problème #3)
# =====================================

# OpenCV - VERSION STABLE
opencv-python>=4.7.0,<4.9.0    # Computer vision

# Face Detection - ALTERNATIVE SANS COMPILATION
mtcnn>=0.1.1,<1.0.0           # Face detection lightweight
tensorflow-cpu>=2.10.0,<2.14.0  # Backend MTCNN (CPU only)
Pillow>=9.0.0,<11.0.0         # Image processing

# =====================================
# DEVELOPMENT & QUALITY
# =====================================

# Formatage et linting
black>=23.0.0,<24.0.0
flake8>=6.0.0,<7.0.0
isort>=5.12.0,<6.0.0

# Testing
pytest>=7.0.0,<8.0.0
pytest-cov>=4.0.0,<5.0.0

# =====================================
# OS-SPECIFIC FALLBACKS
# =====================================

# Windows specific
pywin32>=306; sys_platform == "win32"

# macOS specific (permissions handling)
pyobjc-framework-Cocoa>=9.0; sys_platform == "darwin"
pyobjc-framework-AVFoundation>=9.0; sys_platform == "darwin"

# =====================================
# OPTIONAL DEPENDENCIES
# =====================================

# Smart home (Philips Hue)
# requests déjà inclus ci-dessus

# Performance monitoring
memory-profiler>=0.60.0        # Memory usage tracking

# =====================================
# VERSION LOCKS CRITIQUES
# Évite les conflits de dépendances (Problème #4)
# =====================================

# Numpy version compatible avec tout
# TensorFlow et OpenCV ont des exigences strictes
# PyQt6 nécessite numpy >= 1.21
# TensorFlow-cpu nécessite numpy < 1.26

# MATRIX DE COMPATIBILITÉ TESTÉE:
# Python 3.9 + numpy 1.23 + tensorflow 2.12 + opencv 4.8 = ✅
# Python 3.10 + numpy 1.24 + tensorflow 2.12 + opencv 4.8 = ✅ 
# Python 3.11 + numpy 1.25 + tensorflow 2.13 + opencv 4.8 = ✅

# =====================================
# INSTALLATION NOTES
# =====================================

# Pour éviter les conflits:
# 1. pip install --upgrade pip setuptools wheel
# 2. pip install numpy (en premier)
# 3. pip install -r requirements_production.txt
# 4. python test_system.py (validation)

# Alternative si échec:
# conda create -n gideon python=3.9
# conda activate gideon
# pip install -r requirements_production.txt 